{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\konde\\\\OneDrive\\\\Documents\\\\frontend\\\\src\\\\pages\\\\ManagerPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { FaEdit, FaTrash } from \"react-icons/fa\"; // Importing react-icons\nimport Layout from \"../component/Layout\";\nimport ApiService from \"../service/ApiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManagerPage = () => {\n  _s();\n  const [managers, setManagers] = useState([]);\n  const [managerName, setManagerName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingManagerId, setEditingManagerId] = useState(null);\n\n  // Fetch the managers from our backend\n  useEffect(() => {\n    const getManagers = async () => {\n      try {\n        const response = await ApiService.getAllUsers();\n        if (response.status === 200) {\n          const managerList = response.users.filter(user => user.role === \"MANAGER\");\n          setManagers(managerList);\n        }\n      } catch (error) {\n        var _error$response, _error$response$data;\n        showMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error fetching managers: \" + error);\n      }\n    };\n    getManagers();\n  }, []);\n\n  // Edit manager\n  const editManager = async () => {\n    try {\n      await ApiService.updateUser(editingManagerId, {\n        name: managerName\n      });\n      showMessage(\"Manager successfully updated\");\n      setIsEditing(false);\n      setManagerName(\"\"); // Clear input\n      window.location.reload(); // Reload page\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      showMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error updating manager: \" + error);\n    }\n  };\n\n  // Populate the edit manager data\n  const handleEditManager = manager => {\n    setIsEditing(true);\n    setEditingManagerId(manager.id);\n    setManagerName(manager.name);\n  };\n\n  // Delete manager\n  const handleDeleteManager = async managerId => {\n    if (window.confirm(\"Are you sure you want to delete this manager?\")) {\n      try {\n        await ApiService.deleteUser(managerId);\n        showMessage(\"Manager successfully deleted\");\n        window.location.reload(); // Reload page\n      } catch (error) {\n        var _error$response3, _error$response3$data;\n        showMessage(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Error deleting manager: \" + error);\n      }\n    }\n  };\n\n  // Method to show message or errors\n  const showMessage = msg => {\n    setMessage(msg);\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 4000);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manager-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manager-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Managers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-manager\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: managerName,\n            type: \"text\",\n            placeholder: \"Manager Name\",\n            onChange: e => setManagerName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: editManager,\n            children: [/*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), \" Edit Manager\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), managers && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"manager-list\",\n        children: managers.map(manager => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"manager-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: manager.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"manager-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditManager(manager),\n              children: [/*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this), \" Edit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteManager(manager.id),\n              children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this), \" Delete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, manager.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(ManagerPage, \"gdUsyWdxMsCiaIO68Ll6KT45Rrc=\");\n_c = ManagerPage;\nexport default ManagerPage;\nvar _c;\n$RefreshReg$(_c, \"ManagerPage\");","map":{"version":3,"names":["React","useEffect","useState","FaEdit","FaTrash","Layout","ApiService","jsxDEV","_jsxDEV","ManagerPage","_s","managers","setManagers","managerName","setManagerName","message","setMessage","isEditing","setIsEditing","editingManagerId","setEditingManagerId","getManagers","response","getAllUsers","status","managerList","users","filter","user","role","error","_error$response","_error$response$data","showMessage","data","editManager","updateUser","name","window","location","reload","_error$response2","_error$response2$data","handleEditManager","manager","id","handleDeleteManager","managerId","confirm","deleteUser","_error$response3","_error$response3$data","msg","setTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","type","placeholder","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/konde/OneDrive/Documents/frontend/src/pages/ManagerPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FaEdit, FaTrash } from \"react-icons/fa\"; // Importing react-icons\nimport Layout from \"../component/Layout\";\nimport ApiService from \"../service/ApiService\";\n\nconst ManagerPage = () => {\n  const [managers, setManagers] = useState([]);\n  const [managerName, setManagerName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingManagerId, setEditingManagerId] = useState(null);\n\n  // Fetch the managers from our backend\n  useEffect(() => {\n    const getManagers = async () => {\n      try {\n        const response = await ApiService.getAllUsers();\n        if (response.status === 200) {\n          const managerList = response.users.filter(user => user.role === \"MANAGER\");\n          setManagers(managerList);\n        }\n      } catch (error) {\n        showMessage(\n          error.response?.data?.message || \"Error fetching managers: \" + error\n        );\n      }\n    };\n    getManagers();\n  }, []);\n\n  // Edit manager\n  const editManager = async () => {\n    try {\n      await ApiService.updateUser(editingManagerId, {\n        name: managerName,\n      });\n      showMessage(\"Manager successfully updated\");\n      setIsEditing(false);\n      setManagerName(\"\"); // Clear input\n      window.location.reload(); // Reload page\n    } catch (error) {\n      showMessage(\n        error.response?.data?.message || \"Error updating manager: \" + error\n      );\n    }\n  };\n\n  // Populate the edit manager data\n  const handleEditManager = (manager) => {\n    setIsEditing(true);\n    setEditingManagerId(manager.id);\n    setManagerName(manager.name);\n  };\n\n  // Delete manager\n  const handleDeleteManager = async (managerId) => {\n    if (window.confirm(\"Are you sure you want to delete this manager?\")) {\n      try {\n        await ApiService.deleteUser(managerId);\n        showMessage(\"Manager successfully deleted\");\n        window.location.reload(); // Reload page\n      } catch (error) {\n        showMessage(\n          error.response?.data?.message || \"Error deleting manager: \" + error\n        );\n      }\n    }\n  };\n\n  // Method to show message or errors\n  const showMessage = (msg) => {\n    setMessage(msg);\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  return (\n    <Layout>\n      {message && <div className=\"message\">{message}</div>}\n      <div className=\"manager-page\">\n        <div className=\"manager-header\">\n          <h1>Managers</h1>\n          {isEditing && (\n            <div className=\"edit-manager\">\n              <input\n                value={managerName}\n                type=\"text\"\n                placeholder=\"Manager Name\"\n                onChange={(e) => setManagerName(e.target.value)}\n              />\n              <button onClick={editManager}>\n                <FaEdit /> Edit Manager\n              </button>\n            </div>\n          )}\n        </div>\n\n        {managers && (\n          <ul className=\"manager-list\">\n            {managers.map((manager) => (\n              <li className=\"manager-item\" key={manager.id}>\n                <span>{manager.name}</span>\n                <div className=\"manager-actions\">\n                  <button onClick={() => handleEditManager(manager)}>\n                    <FaEdit /> Edit\n                  </button>\n                  <button onClick={() => handleDeleteManager(manager.id)}>\n                    <FaTrash /> Delete\n                  </button>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nexport default ManagerPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,OAAO,QAAQ,gBAAgB,CAAC,CAAC;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAE9D;EACAD,SAAS,CAAC,MAAM;IACd,MAAMoB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,UAAU,CAACiB,WAAW,CAAC,CAAC;QAC/C,IAAID,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;UAC3B,MAAMC,WAAW,GAAGH,QAAQ,CAACI,KAAK,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,SAAS,CAAC;UAC1EjB,WAAW,CAACa,WAAW,CAAC;QAC1B;MACF,CAAC,CAAC,OAAOK,KAAK,EAAE;QAAA,IAAAC,eAAA,EAAAC,oBAAA;QACdC,WAAW,CACT,EAAAF,eAAA,GAAAD,KAAK,CAACR,QAAQ,cAAAS,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBG,IAAI,cAAAF,oBAAA,uBAApBA,oBAAA,CAAsBjB,OAAO,KAAI,2BAA2B,GAAGe,KACjE,CAAC;MACH;IACF,CAAC;IACDT,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAM7B,UAAU,CAAC8B,UAAU,CAACjB,gBAAgB,EAAE;QAC5CkB,IAAI,EAAExB;MACR,CAAC,CAAC;MACFoB,WAAW,CAAC,8BAA8B,CAAC;MAC3Cf,YAAY,CAAC,KAAK,CAAC;MACnBJ,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;MACpBwB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOV,KAAK,EAAE;MAAA,IAAAW,gBAAA,EAAAC,qBAAA;MACdT,WAAW,CACT,EAAAQ,gBAAA,GAAAX,KAAK,CAACR,QAAQ,cAAAmB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBP,IAAI,cAAAQ,qBAAA,uBAApBA,qBAAA,CAAsB3B,OAAO,KAAI,0BAA0B,GAAGe,KAChE,CAAC;IACH;EACF,CAAC;;EAED;EACA,MAAMa,iBAAiB,GAAIC,OAAO,IAAK;IACrC1B,YAAY,CAAC,IAAI,CAAC;IAClBE,mBAAmB,CAACwB,OAAO,CAACC,EAAE,CAAC;IAC/B/B,cAAc,CAAC8B,OAAO,CAACP,IAAI,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMS,mBAAmB,GAAG,MAAOC,SAAS,IAAK;IAC/C,IAAIT,MAAM,CAACU,OAAO,CAAC,+CAA+C,CAAC,EAAE;MACnE,IAAI;QACF,MAAM1C,UAAU,CAAC2C,UAAU,CAACF,SAAS,CAAC;QACtCd,WAAW,CAAC,8BAA8B,CAAC;QAC3CK,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,OAAOV,KAAK,EAAE;QAAA,IAAAoB,gBAAA,EAAAC,qBAAA;QACdlB,WAAW,CACT,EAAAiB,gBAAA,GAAApB,KAAK,CAACR,QAAQ,cAAA4B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBhB,IAAI,cAAAiB,qBAAA,uBAApBA,qBAAA,CAAsBpC,OAAO,KAAI,0BAA0B,GAAGe,KAChE,CAAC;MACH;IACF;EACF,CAAC;;EAED;EACA,MAAMG,WAAW,GAAImB,GAAG,IAAK;IAC3BpC,UAAU,CAACoC,GAAG,CAAC;IACfC,UAAU,CAAC,MAAM;MACfrC,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACER,OAAA,CAACH,MAAM;IAAAiD,QAAA,GACJvC,OAAO,iBAAIP,OAAA;MAAK+C,SAAS,EAAC,SAAS;MAAAD,QAAA,EAAEvC;IAAO;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpDnD,OAAA;MAAK+C,SAAS,EAAC,cAAc;MAAAD,QAAA,gBAC3B9C,OAAA;QAAK+C,SAAS,EAAC,gBAAgB;QAAAD,QAAA,gBAC7B9C,OAAA;UAAA8C,QAAA,EAAI;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAChB1C,SAAS,iBACRT,OAAA;UAAK+C,SAAS,EAAC,cAAc;UAAAD,QAAA,gBAC3B9C,OAAA;YACEoD,KAAK,EAAE/C,WAAY;YACnBgD,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,cAAc;YAC1BC,QAAQ,EAAGC,CAAC,IAAKlD,cAAc,CAACkD,CAAC,CAACC,MAAM,CAACL,KAAK;UAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC,eACFnD,OAAA;YAAQ0D,OAAO,EAAE/B,WAAY;YAAAmB,QAAA,gBAC3B9C,OAAA,CAACL,MAAM;cAAAqD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,iBACZ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAELhD,QAAQ,iBACPH,OAAA;QAAI+C,SAAS,EAAC,cAAc;QAAAD,QAAA,EACzB3C,QAAQ,CAACwD,GAAG,CAAEvB,OAAO,iBACpBpC,OAAA;UAAI+C,SAAS,EAAC,cAAc;UAAAD,QAAA,gBAC1B9C,OAAA;YAAA8C,QAAA,EAAOV,OAAO,CAACP;UAAI;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC3BnD,OAAA;YAAK+C,SAAS,EAAC,iBAAiB;YAAAD,QAAA,gBAC9B9C,OAAA;cAAQ0D,OAAO,EAAEA,CAAA,KAAMvB,iBAAiB,CAACC,OAAO,CAAE;cAAAU,QAAA,gBAChD9C,OAAA,CAACL,MAAM;gBAAAqD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,SACZ;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTnD,OAAA;cAAQ0D,OAAO,EAAEA,CAAA,KAAMpB,mBAAmB,CAACF,OAAO,CAACC,EAAE,CAAE;cAAAS,QAAA,gBACrD9C,OAAA,CAACJ,OAAO;gBAAAoD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,WACb;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA,GAT0Bf,OAAO,CAACC,EAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUxC,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACjD,EAAA,CAjHID,WAAW;AAAA2D,EAAA,GAAX3D,WAAW;AAmHjB,eAAeA,WAAW;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}